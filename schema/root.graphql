type Query {
    token(emailAddress: String!, password: String!): String

    clients: [Client!]!
    clientById(clientId: Int!): Client

    households(paginationOptions: PaginationOptions, sortKey: HouseholdSortKey, archived: Boolean): [Household!]!
    householdById(householdId: Int!): Household

    people(paginationOptions: PaginationOptions, sortKey: PersonSortKey, archived: Boolean): [Person!]!
    personById(personId: Int!): Person

    ministries(archived: Boolean): [Ministry!]!
    ministryById(ministryId: Int!): Ministry

    donations(paginationOptions: PaginationOptions, sortKey: DonationSortKey, archived: Boolean): [Donation!]!
    donationById(donationId: Int!): Donation

    donationCampaigns(paginationOptions: PaginationOptions, sortKey: DonationCampaignSortKey, beforeDate: String, afterDate: String, archived: Boolean): [DonationCampaign!]!
    donationCampaignById(donationCampaignId: Int!): DonationCampaign

    events(paginationOptions: PaginationOptions, sortKey: EventSortKey, archived: Boolean): [Event!]!
    eventById(eventId: Int!): Event
}

type Mutation {
    addClient(clientAddInput: ClientAddInput!): Client!
    updateClient(clientUpdateInput: ClientUpdateInput!): Client!

    addHousehold(householdAddInput: HouseholdAddInput!): Household!
    updateHousehold(householdUpdateInput: HouseholdUpdateInput!): Household!
    deleteHousehold(householdId: Int!): DeleteOutput!

    addPerson(personAddInput: PersonAddInput!): Person!
    updatePerson(personUpdateInput: PersonUpdateInput!): Person!
    deletePerson(personId: Int!): DeleteOutput!

    addMinistry(ministryAddInput: MinistryAddInput!): Ministry!
    updateMinistry(ministryUpdateInput: MinistryUpdateInput!): Ministry!
    deleteMinistry(ministryId: Int!): DeleteOutput!

    addMinistryDelegation(personId: Int!, ministryId: Int!): MinistryDelegation!
    removeMinistryDelegation(personId: Int!, ministryId: Int!): MinistryDelegationDeleteOutput!

    addDonation(donationAddInput: DonationAddInput!): Donation!
    updateDonation(donationUpdateInput: DonationUpdateInput!): Donation!
    deleteDonation(donationId: Int!): DeleteOutput!

    addDonationCampaign(donationCampaignAddInput: DonationCampaignAddInput!): DonationCampaign!
    updateDonationCampaign(donationCampaignUpdateInput: DonationCampaignUpdateInput!): DonationCampaign!
    deleteDonationCampaign(donationCampaignId: Int!): DeleteOutput!

    addMilestone(milestoneAddInput: MilestoneAddInput!): Milestone!
    updateMilestone(milestoneUpdateInput: MilestoneUpdateInput!): Milestone!
    deleteMilestone(milestoneId: Int!): DeleteOutput!

    addEvent(eventAddInput: EventAddInput!): Event!
    updateEvent(eventUpdateInput: EventUpdateInput!): Event!
    deleteEvent(eventId: Int!): DeleteOutput!

    setEventRegistration(eventAttendanceSetInput: EventAttendanceSetInput!): EventAttendance!
    deleteEventRegistration(eventId: Int!, personId: Int!): EventAttendanceDeleteOutput!    
}

type DeleteOutput {
    id: Int!
}
 

 directive @optional on INPUT_FIELD_DEFINITION
